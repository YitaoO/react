import Taro, { Component } from "@tarojs/taro";
import { connect } from "@tarojs/redux";
import { View, Map, CoverView, CoverImage } from "@tarojs/components";
// 组件 - 侧边菜单
import SiderMenu from "../../components/siderMenu";
import MarkerInfoWindow from "./markerInfo";
import headerIcon from "../../images/index_header_icon.png";
import reloadIcon from "../../images/index_map_reload_icon.png";
import "./index.scss";

@connect(({ userInfo, car, menu }) => ({
  userInfo,
  car,
  menu
}))
export default class MapMain extends Component {
  constructor(props) {
    super(props);

    this.state = {
      latitude: "23.099994",
      longitude: "113.324520",
      showMarkerInfo: false,
      markerInfo: {} //弹窗信息
    };
    this.handleMenu = this.handleMenu.bind(this);
    this.handleMakertap = this.handleMakertap.bind(this);
    this.handleReloadBtn = this.handleReloadBtn.bind(this);
    this.handleMap = this.handleMap.bind(this);
  }
  getLocation = () => {
    wx.getLocation({
      success: res => {
        this.setState({
          longitude: res.longitude,
          latitude: res.latitude,
          controls: []
        });
      }
    });
  };
  componentDidMount() {
    this.getLocation();
  }
  // 点击菜单
  handleMakertap = e => {
    let { carStateList } = this.props.car;
    let info = {};
    carStateList.forEach(item => {
      if (item.id == e.markerId) {
        info = item;
        return;
      }
    });
    this.setState({
      showMarkerInfo: true,
      markerInfo: info
    });
  };
  // 定位
  handleReloadBtn = () => {
    this.setState({
      latitude: 0,
      longitude: 0
    });
    this.getLocation();
  };
  // 点击地图
  handleMap = () => {
    this.setState({
      showMarkerInfo: false,
      markerInfo: {}
    });
  };
  // 菜单路由
  handleMenu = () => {
    const { isShow } = this.props.menu;
    this.props.dispatch({
      type: "menu/saveState",
      response: {
        isShow: !isShow
      }
    });
  };
  render() {
    const { UserID } = this.props.userInfo.carUserInfo;
    const { carStateList } = this.props.car;
    if (!!UserID && carStateList.length == 0) {
      this.props.dispatch({
        type: "car/getCarLastState",
        payload: {
          UserId: UserID
        }
      });
    }

    return (
      <View class="index-map-container">
        <Map
          id="myMap"
          longitude={this.state.longitude}
          latitude={this.state.latitude}
          include-points={carStateList}
          markers={carStateList}
          onMarkertap={this.handleMakertap}
          onClick={this.handleMap}
          style="width: 100%; height: 100%;"
        >
          <MarkerInfoWindow
            isShow={this.state.showMarkerInfo}
            info={this.state.markerInfo}
          />

          {/* 定位按钮 */}
          <CoverImage
            class="reload-btn"
            src={reloadIcon}
            onTap={this.handleReloadBtn}
          />
          {/* {头部按钮} */}
          <CoverImage
            class="header-btn"
            src={headerIcon}
            onTap={this.handleMenu}
          />
          <SiderMenu />
        </Map>
      </View>
    );
  }
}
